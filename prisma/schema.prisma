// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  username  String     @unique
  questions Question[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

model Question {
  id           String   @id @default(cuid())
  userId       String
  questionText String
  status       String   @default("pending") // "pending", "answered", "failed"
  answer       Answer?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("questions")
}

model Answer {
  id         String   @id @default(cuid())
  questionId String   @unique
  answerText String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  chart      Chart?

  @@map("answers")
}

model Chart {
  id              String   @id @default(cuid())
  title           String
  description     String
  chartDefinition String   @db.Text // Mermaid chart definition string
  theme           String   @default("default")
  answerId        String   @unique
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  // Relations
  answer Answer @relation(fields: [answerId], references: [id], onDelete: Cascade)
  @@map("charts")
}
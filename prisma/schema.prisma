// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  username  String     @unique
  questions Question[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("users")
}

model Question {
  id           String   @id @default(cuid())
  userId       String
  questionText String
  status       String   @default("pending") // "pending", "answered", "failed"
  answer       Answer?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("questions")
}

model Answer {
  id             String         @id @default(cuid())
  questionId     String         @unique
  answerText     String
  visualization  Visualization?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // Relations
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)

  @@map("answers")
}

model Visualization {
  id             String   @id @default(cuid())
  visualizationId String?
  title          String?
  description    String?
  duration       Int
  fps            Int
  metadata       Json?
  frames         Frame[]
  answerId       String   @unique
  answer         Answer   @relation(fields: [answerId], references: [id])
}

model Frame {
  id               String              @id @default(cuid())
  timestamp        Int
  orderIndex       Int
  objects          VisualizationObject[]
  visualizationId  String
  visualization    Visualization       @relation(fields: [visualizationId], references: [id])
}

model VisualizationObject {
  id         String @id @default(cuid())
  objectId   String
  type       String
  properties Json
  orderIndex Int
  frameId    String
  frame      Frame  @relation(fields: [frameId], references: [id])
}